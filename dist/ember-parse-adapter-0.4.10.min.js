var ParseAdapter=DS.ParseAdapter=DS.RESTAdapter.extend({defaultSerializer:"_parse",init:function(){this._super(),this.set("headers",{"X-Parse-Application-Id":this.get("applicationId"),"X-Parse-REST-API-Key":this.get("restApiId")})},host:"https://api.parse.com",namespace:"1",classesPath:"classes",pathForType:function(e){var t=this.container.lookupFactory("model:"+e);return DS.ParseUserModel.detect(t)?"users":"login"===e?e:this.classesPath+"/"+t.parseClassName()}}),ParseSerializer=DS.ParseSerializer=DS.RESTSerializer.extend({primaryKey:"objectId",extract:function(e,t,s,r,a){return null!==r&&"updateRecord"===a&&(s[this.get("primaryKey")]=r),this._super(e,t,s,r,a)},normalizeAttributes:function(e,t){e.eachAttribute(function(e,s){"date"===s.type&&"object"===Ember.typeOf(t[e])?t[e]=t[e].iso:"date"===s.type&&"string"===Ember.typeOf(t[e])&&(t[e]=new Date(t[e]).toISOString())}),this._super(e,t)},normalizeRelationships:function(e,t){this._super(e,t),e.eachRelationship(function(s,r){if(t[s]&&"belongsTo"===r.kind&&(t[s]=t[s].objectId),"hasMany"===r.kind){var a={where:{$relatedTo:{object:{__type:"Pointer",className:Ember.String.capitalize(e.parseClassName()),objectId:t.id},key:s}}};t[s]=this.get("store").findQuery(Ember.String.singularize(s),a)}},this)},normalizePayload:function(e,t){var s={};return s[e.typeKey]=t.results?t.results:t,s},serializeIntoHash:function(e,t,s,r){Ember.merge(e,this.serialize(s,r))},serializeAttribute:function(e,t,s,r){"createdAt"===s||"updatedAt"===s||"emailVerified"===s?delete t[s]:"date"===r.type&&"createdAt"!==s&&"updatedAt"!==s?t[s]={__type:"Date",iso:e.get(s)}:this._super(e,t,s,r)},serializeBelongsTo:function(e,t,s){var r=s.key,a=e.get(r);if(a){var i=a.parseClassName();t[r]={__type:"Pointer",className:i,objectId:a.get("id")}}},serializeHasMany:function(){}});Ember.onLoad("Ember.Application",function(e){e.initializer({name:"parse",initialize:function(e,t){t.register("serializer:_parse",DS.ParseSerializer)}})});var ParseModel=DS.ParseModel=DS.Model.extend({createdAt:DS.attr("date"),updatedAt:DS.attr("date"),parseClassName:function(){return this.constructor.parseClassName()},adapterDidCommit:function(e){Ember.merge(this._data,e),this._super(this._data)}});ParseModel.reopenClass({parseClassName:function(){return Ember.String.capitalize(this.typeKey)}});var ParseUserModel=DS.ParseUserModel=ParseModel.extend({username:DS.attr("string"),password:DS.attr("string"),email:DS.attr("string"),emailVerified:DS.attr("boolean"),sessionToken:DS.attr("string"),isCurrent:Ember.computed.bool("currentUser"),_persist:function(e){var t=this,s=this.get("store").get("defaultAdapter"),r=s.get("headers");if(e&&(e.id=e.objectId,t.setProperties(e),t.transitionTo("isLoaded"),r["X-Parse-Session-Token"]=e.sessionToken,s.set("headers",r)),void 0!==typeof localStorage)if(e){this.set("currentUser",!0);var a={session:e.sessionToken,userId:e.objectId};localStorage.setItem("ember_parse_user",JSON.stringify(a))}else this.set("currentUser",!1),localStorage.removeItem("ember_parse_user")},signUp:function(e){var t=this,s=this.get("store").get("defaultAdapter"),r={username:this.get("username"),password:this.get("password"),email:this.get("email")};s.ajax(s.buildURL(this.constructor.typeKey),"POST",{data:r}).then(function(s){t._persist(s),e(s)},function(s){t._persist(null),e(s)})},login:function(e){var t=this,s=this.get("store").get("defaultAdapter"),r={username:this.get("username"),password:this.get("password")};s.ajax(s.buildURL("login"),"GET",{data:r}).then(function(s){t._persist(s),e(s)},function(s){t._persist(null),e(s)})},logout:function(){this._persist(null)},requestPasswordReset:function(){var e=this.get("store").get("defaultAdapter"),t={email:this.get("email")};e.ajax(e.buildURL("requestPasswordReset"),"POST",{data:t})},save:function(){if(void 0!==typeof localStorage){var e=JSON.parse(localStorage.getItem("ember_parse_user")),t=this.get("id"),s=this.get("store").get("defaultAdapter"),r=s.get("headers");t===e.userId&&(r["X-Parse-Session-Token"]=e.session,s.set("headers",r))}this._super()}});