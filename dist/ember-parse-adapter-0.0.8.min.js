var ParseConnector=Ember.Mixin.create({applicationId:null,javascriptId:null,restApiId:null,serverUrl:"https://api.parse.com",versionPath:"1",modelPath:"classes",requestHeaders:function(){if(!this.applicationId||!this.restApiId||!this.javascriptId)throw"Hey! You forgot to set your Parse Account info! https://parse.com/apps/";return{"X-Parse-Application-Id":this.applicationId,"X-Parse-REST-API-Key":this.restApiId}},xDomainRequest:function(e,t,n,r,i){var s=new XDomainRequest;e!=="POST"&&(n._method=e,e="POST"),n._ApplicationId=this.applicationId,n._JavaScriptKey=this.javascriptId,n=JSON.stringify(n),s.onload=function(){var e;try{e=JSON.parse(s.responseText)}catch(t){i&&i(s)}e&&r&&r(e,s)},s.onerror=s.ontimeout=function(){i&&i(s)},s.onprogress=function(){},s.open(e,t),s.send(n)},ajax:function(e,t,n){if(typeof XDomainRequest!="undefined")return this.xDomainRequest(e,t,n.data,n.success,n.error);var r={url:t,context:this,type:e,headers:this.requestHeaders(),success:n.success,error:n.error,contentType:"text/plain"};e!=="GET"&&e!=="DELETE"&&$.extend(r,{data:JSON.stringify(n.data)}),jQuery.ajax(r)},request:function(e,t,n,r,i){Ember.typeOf(n)==="object"&&(i=r,r=n,n=null),Ember.typeOf(r)==="object"&&!i&&(i=r,r={}),this.ajax(e,this.buildUrl(t,n),{data:r,success:i.success,error:i.error})},batchRequest:function(e,t){var n="%@/%@/batch".fmt(this.serverUrl,this.versionPath);this.ajax("POST",n,{data:e,success:t.success,error:t.error})},buildUrl:function(e,t){var n="%@/%@/%@/%@".fmt(this.serverUrl,this.versionPath,this.modelPath,e);return t&&(n+="/"+t),n}}),ParseJSONSerializer=DS.JSONSerializer.extend({primaryKey:function(){return"objectId"},addHasMany:function(e,t,n,r){if(r.options.embedded)this._super();else{var i=[];t.get(n).forEach(function(e){e.get("id")&&i.push({__type:"Pointer",className:this.getTypeName(e),objectId:e.get("id")})}),e[n]=i}}}),ParseAdapter=DS.Adapter.extend(ParseConnector,{bulkCommit:!0,serializer:ParseJSONSerializer,getTypeName:function(e){if(e.parseType)return e.parseType;var t=e.toString().split(".");return t[t.length-1]},makeRootObject:function(e,t){var n=this.get("serializer"),r=n.rootForType(e),i={};return Ember.isArray(t)&&(r=n.pluralize(r)),i[r]=t,i},makeBatchFor:function(e,t){var n={requests:[]};return t.forEach(function(t){var r={},i=this.getTypeName(t.constructor);r.method=e,r.path="/%@/%@/%@".fmt(this.versionPath,this.modelPath,i),r.body=this.serialize(t),n.requests.push(r)},this),n},extendRecords:function(e,t){var n=t.requests.map(function(t,n){var r=e[n];return r.success?$.extend(t.body,r.success):t.body});return n},find:function(e,t,n){var r=this.getTypeName(t);this.request("GET",r,n,{success:function(r){Ember.run(this,function(){this.didFindRecord(e,t,this.makeRootObject(t,r),n)})},error:function(e){Ember.Logger.error("Adapter::find::error",e)}})},findAll:function(e,t,n){var r=this.getTypeName(t);this.request("GET",r,{success:function(n){Ember.run(this,function(){this.didFindAll(e,t,this.makeRootObject(t,n.results))})},error:function(e){Ember.Logger.error("Adapter::find::error",e)}})},findMany:function(e,t,n){var r=this.getTypeName(t);this.request("POST",r,{where:{objectId:{$in:n.join(",")}}},{success:function(n){Ember.run(this,function(){this.didFindMany(e,t,this.makeRootObject(t,n.results))})},error:function(e){Ember.Logger.error("Adapter::find::error",e)}})},batchCommit:function(e,t){var n=this.makeBatchFor("PUT",e.updated),r=this.makeBatchFor("DELETE",e.deleted),i=this.makeBatchFor("POST",e.created),s={requests:i.requests.concat(n.requests.concat(r.requests))},o=this;this.batchRequest(s,{success:function(e){var n=this.extendRecords(e,s);Ember.run(this,function(){o.didSaveRecords(store,type,set,o.makeRootObject(type,set)),t()})},error:function(e){Ember.Logger.error("Adapter::batchCommit::error",e)}})},createRecord:function(e,t,n){var r=this.getTypeName(t),i=this.serialize(n,{includeId:!0});this.request("POST",r,i,{success:function(r){Ember.run(this,function(){$.extend(i,r),this.didCreateRecord(e,t,n,this.makeRootObject(t,i))})},error:function(e){Ember.Logger.error("Adapter::createRecord::error",e)}})},createRecords:function(e,t,n){if(this.get("bulkCommit")===!1)return this._super(e,t,n);var r=Ember.Deferred.create(),i=this.makeBatchFor("POST",n);return this.batchRequest(i,{success:function(s){var o=this.extendRecords(s,i);Ember.run(this,function(){this.didCreateRecords(e,t,n,this.makeRootObject(t,o)),r.resolve(n)})},error:function(e){Ember.Logger.error("Adapter::createRecords::error",e),r.reject(e)}}),r},updateRecord:function(e,t,n){var r=this.getTypeName(t),i=this.serialize(n,{includeId:!0});this.request("PUT",r,i.objectId,i,{success:function(r){Ember.run(this,function(){$.extend(i,r),this.didUpdateRecord(e,t,n,this.makeRootObject(t,i))})},error:function(e){Ember.Logger.error("Adapter::updateRecord::error",e)}})},updateRecords:function(e,t,n){if(this.get("bulkCommit")===!1)return this._super(e,t,n);var r=this.makeBatchFor("PUT",n);this.batchRequest(r,{success:function(i){var s=this.extendRecords(i,r);Ember.run(this,function(){this.didUpdateRecords(e,t,n,this.makeRootObject(t,s))})},error:function(e){Ember.Logger.error("Adapter::updateRecords::error",e)}})},deleteRecord:function(e,t,n){var r=this.getTypeName(t),i=this.serialize(n,{includeId:!0});this.request("DELETE",r,i.objectId,{success:function(r){Ember.run(this,function(){$.extend(i,r),this.didDeleteRecord(e,t,n,this.makeRootObject(t,i))})},error:function(e){Ember.Logger.error("Adapter::deleteRecord::error",e)}})},deleteRecords:function(e,t,n){if(this.get("bulkCommit")===!1)return this._super(e,t,n);var r=this.makeBatchFor("DELETE",n);this.batchRequest(r,{success:function(i){var s=this.extendRecords(i,r);Ember.run(this,function(){this.didDeleteRecords(e,t,n,this.makeRootObject(t,s))})},error:function(e){Ember.Logger.error("Adapter::deleteRecords::error",e)}})}});ParseAdapter.registerTransform("date",{deserialize:DS.JSONTransforms.date.deserialize,serialize:function(e){return e instanceof Date?e.toISOString():e===undefined?undefined:null}});var ParseMixin=Ember.Mixin.create({createdAt:DS.attr("date"),updatedAt:DS.attr("date")}),ParseModel=DS.Model.extend(ParseMixin);