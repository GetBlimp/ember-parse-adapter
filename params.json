{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"An Ember Data Adapter for Parse","name":"Ember Parse Adapter","body":"Ember Data Adapter for Parse\r\n===================\r\n\r\nAn Ember Data Adapter built to use the Parse REST API. \r\n\r\nThis is a full Ember implementation against the Parse REST API without the use\r\nof the Parse JavaScript SDK. Currently in a very alpha state. \r\n\r\nCurrently by default it will make use of a batched approach to persisting records. However\r\nthere is an implementation for more granular persistence.\r\n\r\nNote: This is a CORS implementation. It has nuances. As an example Parse REST API only responds\r\nto SSL requests. Due to IE8+ CORS implementations that means you must run your app under SSL. As well\r\nsome browsers will perform an OPTIONS call along-side the regular GET/PUT/POST/DELETE \r\n(still investigating all of this - and learning). I chose to re-use the Parse XDomainRequest implementation\r\nand then use jQuery for all other supporting browsers. This might be a dead-end and I might\r\nbe wiser to use Parse's full XHR implementation (it's small and smart - but I'm trying to be original).\r\n\r\nFeatures\r\n--------\r\n\r\n##### ParseConnector: Ember Mixin\r\n  * Provides the AJAX connectivity to the Parse REST API.\r\n\r\n##### ParseJSONSerializer: Ember Data JSONSerializer\r\n  * Provides the translation of objectId to id.\r\n  * Provides encoding of hasMany associations to Parse Pointer objects.\r\n\r\n##### ParseAdapter: Ember Data Adapter\r\n  * Implements the persistence layer to Parse.\r\n  * Provides either bulk/batch persistence or granular.\r\n\r\n##### ParseMixin: Ember Mixin\r\n  * Provides created/updated date attributes.\r\n\r\n##### ParseModel: Ember Data Model\r\n  * Provides an easy way to setup a Parse object.\r\n\r\nIssues\r\n------\r\n\r\n* Incomplete example.\r\n* Associations are rough cuts.\r\n* Referenced hasMany associations not serializing during isNew state.\r\n* Demo is rough due to Parse acct dependency.\r\n\r\nRoadmap\r\n-------\r\n\r\n* Determine serialization of new records with hasMany association references.\r\n* Parse Relation for many-to-many associations.\r\n* Implement findQuery.\r\n* Implement Store record error states.\r\n* Implement full type encodings in ParseSerializer supported by Parse (Bytes/Pointer/Relation).\r\n\r\nDev Notes\r\n---------\r\n* To get a build simply grunt. You'll find builds inside the /dist folder.\r\n* Tagging is formatted as 'vX.X.X' v.X.X.X\r\n","google":""}